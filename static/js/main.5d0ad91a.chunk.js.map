{"version":3,"sources":["components/DetailBox.js","components/Buttons.js","components/Gallery.js","components/Pagination.js","components/MainPage.js","App.js","index.js"],"names":["DetailBox","closeBox","images","currentImage","imageClicked","isLinkAvailable","className","onClick","filter","image","id","map","title","src","original","url","alt","import_datetime","source_post_url","class","href","rating","Buttons","buttonClicked","action","value","Gallery","downsized","Pagination","imagesPerPage","totalImages","loadButton","paginate","pageNumbers","i","Math","ceil","push","number","MainPage","useState","setLoadButton","setImages","setCurrentImage","boxOpen","setBoxOpen","currentPage","setCurrentPage","load","indexOfLastImage","indexOfFirstImage","currentImages","slice","event","clickedImage","target","e","preventDefault","serachQuery","console","log","fetch","then","response","json","data","pageClicked","pageValue","length","pageNumber","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAyCeA,EAvCG,SAAC,GAAqE,IAApEC,EAAmE,EAAnEA,SAAUC,EAAyD,EAAzDA,OAAQC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,gBAE9D,OACI,sBAAKC,UAAU,aAAf,UACA,wBAAQA,UAAU,gBAAgBC,QAASN,EAA3C,eAICC,EACAM,QAAO,SAAAC,GAAK,OAAIA,EAAMC,KAAOP,KAC7BQ,KAAI,SAAAF,GAAK,OACV,sBAAKH,UAAU,wBAAf,UAGA,sBAAKA,UAAU,aAAf,UACA,6BAAKG,EAAMG,QACX,qBAAoBF,GAAID,EAAMC,GAAIJ,UAAU,eAAeO,IAAKJ,EAAMP,OAAOY,SAASC,IAAKR,QAASH,EAAcY,IAAI,cAA5GP,EAAMC,MAFiBD,EAAMC,IAMvC,sBAAKJ,UAAU,cAAf,UAEA,oBAAIA,UAAU,gBAAd,0BACA,sBAAMA,UAAU,cAAhB,SAA+BG,EAAMQ,kBACjC,oBAAIX,UAAU,gBAAd,kBAGHD,IAAoBI,EAAMS,gBAAmB,sBAAMC,MAAM,cAAZ,sCAA4D,mBAAGb,UAAU,WAAUc,KAAMX,EAAMS,gBAAnC,SAAqDT,EAAMS,kBACrK,oBAAIZ,UAAU,gBAAd,qBACA,sBAAMA,UAAU,cAAhB,SAA+BG,EAAMY,sBCd9BC,EAfC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACf,OACI,sBAAKjB,UAAU,mBAAf,UACA,sBAAMA,UAAU,cAAhB,yDACA,uBAAMkB,OAAO,GAAb,UAIA,yBAAQlB,UAAU,aAAaC,QAASgB,EAAeE,MAAM,OAA7D,cAAqE,qBAAKnB,UAAU,aAAaO,IAAI,iBAAiBG,IAAI,KAA1H,WACA,yBAAQV,UAAU,aAAaC,QAASgB,EAAeE,MAAM,OAA7D,cAAqE,qBAAKnB,UAAU,aAAaO,IAAI,yBAAyBG,IAAI,KAAlI,kBCQOU,EAjBC,SAAC,GAA8B,IAA5BxB,EAA2B,EAA3BA,OAAQE,EAAmB,EAAnBA,aACvB,OACI,qBAAKE,UAAU,mBAAf,SAICJ,EACAS,KAAI,SAAAF,GAAK,OACV,qBAAoBH,UAAU,kBAA9B,SACA,qBAAoBI,GAAID,EAAMC,GAAIJ,UAAU,QAAQO,IAAKJ,EAAMP,OAAOyB,UAAUZ,IAAKR,QAASH,EAAcY,IAAI,cAAtGP,EAAMC,KADND,EAAMC,UCeTkB,EAvBI,SAAC,GAIhB,IAJwE,IAAvDC,EAAsD,EAAtDA,cAAeC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SAEnDC,EAAY,GAEVC,EAAI,EAAGA,GAAKC,KAAKC,KAAKN,EAAYD,GAAeK,IACrDD,EAAYI,KAAKH,GAGrB,OACI,8BAEKH,EACJ,sBAAKzB,UAAU,aAAf,UACA,oBAAIA,UAAU,cAAd,mBACQ2B,EAAYtB,KAAI,SAAA2B,GAAM,OAEvB,wBAAqBhC,UAAU,cAAcC,QAAS,kBAAKyB,EAASM,IAApE,SAA8EA,GAAhEA,SAEpB,QCyFKC,EAvGE,WAGb,MAAoCC,oBAAS,GAA7C,mBAAOT,EAAP,KAAmBU,EAAnB,KACA,EAA4BD,mBAAS,IAArC,mBAAOtC,EAAP,KAAewC,EAAf,KACA,EAAwCF,qBAAxC,mBAAOrC,EAAP,KAAqBwC,EAArB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAAsCL,mBAAS,GAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KACA,EAAuBP,mBAAS,IAAzBX,EAAP,oBACA,EAA0BW,mBAAS,IAA5BnC,EAAP,oBACA,EAAemC,oBAAS,GAAjBQ,EAAP,oBA6BMC,EAAkBH,EAAcjB,EAChCqB,EAAoBD,EAAmBpB,EACvCsB,EAAgBjD,EAAOkD,MAAMF,EAAmBD,GAUhD7C,EAAc,SAACiD,GACb,IAAMC,EAAgBD,EAAME,OAAO7C,GACnCiC,EAAgBW,GAChBT,GAAW,IAWnB,OACE,sBAAKvC,UAAU,eAAf,UAKCsC,EAAU,cAAC,EAAD,CACP3C,SAZW,WACb4C,GAAW,IAYTxC,gBAAiBA,EACjBH,OAASA,EACTC,aAAeA,EACfC,aAAeA,IACb,KAEJ,cAAC,EAAD,CACEmB,cAjEgB,SAACiC,GAErBA,EAAEC,iBACJ,IAAMC,EAAcF,EAAED,OAAO9B,MAC/BkC,QAAQC,IAAIF,GAGVG,MAAM,mFAAmFH,GACxFI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAE1BF,MAAK,SAAAG,GAAI,OAAKvB,EAAUuB,EAAKA,SAC7BH,KAAKrB,GAAc,OAyDhBO,EAAO,cAAC,EAAD,CACb9C,OAASiD,EACT/C,aAAcA,IACV,KAIN,cAAC,EAAD,CACK2B,WAAaA,EACZmC,YA7DkB,SAACV,GACnB,IAAMW,EAAWX,EAAED,OAAO9B,MAE3BkC,QAAQC,IAAIO,IA2DXtC,cAAeA,EACfC,YAAa5B,EAAOkE,OACpBpC,SAlDe,SAACqC,GAChBtB,EAAesB,UC/BNC,MAlBf,WAGE,OACE,sBAAKhE,UAAU,MAAf,UACA,sBAAKA,UAAU,aAAf,UACA,wCAAU,sBAAMA,UAAU,cAAhB,mBAAV,OACA,qBAAKA,UAAU,gBAAeO,IAAI,yBAAyBG,IAAI,QAG/D,cAAC,EAAD,QCNJuD,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAGFC,SAASC,eAAe,U","file":"static/js/main.5d0ad91a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DetailBox = ({closeBox, images, currentImage, imageClicked, isLinkAvailable}) => {\r\n   \r\n    return (\r\n        <div className=\"detail-box\">\r\n        <button className=\"close-box-btn\" onClick={closeBox}>X</button>\r\n\r\n\r\n        {/* filter through the images array and only display the results if the image matches the current image state */}\r\n        {images\r\n        .filter(image => image.id === currentImage)\r\n        .map(image => \r\n        <div className=\"details-img-container\" >\r\n    \r\n    {/* display the image that user has clicked on  */}\r\n        <div className=\"img-holder\" key={image.id}>\r\n        <h1>{image.title}</h1>\r\n        <img key={image.id} id={image.id} className=\"image-in-box\" src={image.images.original.url} onClick={imageClicked} alt=\"animal-gif\"/>\r\n          </div>  \r\n\r\n            {/* display other data in another div such as image source url, rating and import date */}\r\n        <div className=\"img-details\">\r\n    \r\n        <h2 className=\"detail-header\">Import date </h2>\r\n        <span className=\"import-date\">{image.import_datetime}</span>\r\n            <h2 className=\"detail-header\">URL </h2>\r\n\r\n            {/* only show url if there is one, show warning message if there is not */}\r\n        {isLinkAvailable === image.source_post_url ?  <span class=\"import-date\">No source link available</span> : <a className=\"img-link\"href={image.source_post_url}>{image.source_post_url}</a> }\r\n        <h2 className=\"detail-header\">Rating </h2>\r\n        <span className=\"import-date\">{image.rating}</span>\r\n        </div>\r\n        </div>\r\n        \r\n        )}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DetailBox;","import React from 'react';\r\n\r\nconst Buttons = ({ buttonClicked }) => {\r\n    return (\r\n        <div className=\"button-container\">\r\n        <span className=\"button-info\">Please select which images you want to see.</span>\r\n        <form action=\"\">\r\n\r\n        \r\n\r\n        <button className=\"animal-btn\" onClick={buttonClicked} value=\"cats\"> <img className=\"animal-pic\" src=\"images/cat.svg\" alt=\"\" /> Cats</button>\r\n        <button className=\"animal-btn\" onClick={buttonClicked} value=\"dogs\"> <img className=\"animal-pic\" src=\"images/dog-seating.svg\" alt=\"\" /> Dogs</button>\r\n        </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Buttons;","import React from 'react';\r\n\r\nconst Gallery = ({ images, imageClicked }) => {\r\n    return (\r\n        <div className=\"images-container\">\r\n\r\n{/* map though images array and display results in an image tag with source url */}\r\n\r\n        {images\r\n        .map(image => \r\n        <div key={image.id} className=\"image-container\"> \r\n        <img key={image.id} id={image.id} className=\"image\" src={image.images.downsized.url} onClick={imageClicked} alt=\"animal-gif\"/> \r\n        </div>\r\n        )}\r\n          \r\n  </div>\r\n    );\r\n};\r\n\r\nexport default Gallery;","import React from 'react';\r\n\r\nconst Pagination = ({imagesPerPage, totalImages, loadButton, paginate}) => {\r\n\r\n    const pageNumbers=[];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalImages/imagesPerPage);i++){\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            \r\n            {loadButton ? \r\n         <div className=\"pagination\">\r\n         <h2 className=\"pages-title\">Pages</h2>\r\n                {pageNumbers.map(number => \r\n                \r\n                <button key ={number}className=\"page-number\" onClick={() =>paginate(number)}>{number}</button>)}\r\n         </div>\r\n         :null} \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React, {useState} from 'react';\r\nimport DetailBox from './DetailBox';\r\nimport Buttons from \"./Buttons\";\r\nimport Gallery from './Gallery';\r\nimport Pagination from './Pagination';\r\n\r\nconst MainPage = () => {\r\n\r\n    \r\n    const [loadButton, setLoadButton] = useState(false)\r\n    const [images, setImages] = useState([]);\r\n    const [currentImage, setCurrentImage] = useState();\r\n    const [boxOpen, setBoxOpen] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [imagesPerPage]= useState(25);\r\n    const [isLinkAvailable] = useState(\"\")\r\n    const [load] = useState(false)\r\n\r\n\r\n    // find out what button was clicked through event handler\r\n    \r\n    const buttonClicked = (e) =>{\r\n     \r\n      e.preventDefault();\r\n    const serachQuery = e.target.value;\r\n  console.log(serachQuery)\r\n    //send request for data with by getting the value of button pressed and using it as a search query\r\n\r\n    fetch('https://api.giphy.com/v1/gifs/search?api_key=qeYXgCES3uM22GY3CucKAMQNlzL8X5vL&q='+serachQuery)\r\n    .then(response => response.json())\r\n   \r\n    .then(data =>  setImages(data.data))\r\n    .then(setLoadButton(true))\r\n    \r\n    }\r\n\r\n\r\n    const pageClicked = (e) =>{\r\n      const pageValue =e.target.value;\r\n     \r\n     console.log(pageValue)\r\n     }\r\n\r\n    //get current posts \r\n\r\n    const indexOfLastImage= currentPage * imagesPerPage;\r\n    const indexOfFirstImage = indexOfLastImage - imagesPerPage;\r\n    const currentImages = images.slice(indexOfFirstImage, indexOfLastImage)\r\n\r\n    //set current page with paginate function\r\n\r\n    const paginate = (pageNumber) =>{\r\n      setCurrentPage(pageNumber)\r\n    }\r\n\r\n  // get the id of the image clicked and open detail box\r\n\r\n    const imageClicked =(event) =>{ \r\n            const clickedImage = (event.target.id);\r\n            setCurrentImage(clickedImage);\r\n            setBoxOpen(true)\r\n            \r\n    }\r\n\r\n\r\n    //close detail box\r\n    const closeBox = () =>{\r\n        setBoxOpen(false);\r\n    }\r\n  \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n      \r\n{/* open detail box if boxOpen is set to true */}\r\n{/* also display Deata component and props to pass to the component */}\r\n     \r\n      {boxOpen ? <DetailBox\r\n          closeBox={closeBox}\r\n          isLinkAvailable={isLinkAvailable}\r\n          images ={images}\r\n          currentImage ={currentImage}\r\n          imageClicked ={imageClicked}\r\n        />: null }\r\n        \r\n        <Buttons\r\n          buttonClicked={buttonClicked}\r\n        />\r\n       {/* display Gallery component and props to pass to the component */}\r\n       {load ? <Gallery\r\n  images ={currentImages}\r\n  imageClicked={imageClicked}\r\n/>  : null} \r\n\r\n{/* display Pagination component and props to pass to the component */}\r\n\r\n<Pagination\r\n     loadButton ={loadButton}\r\n      pageClicked ={pageClicked}\r\n      imagesPerPage={imagesPerPage}\r\n      totalImages={images.length}\r\n      paginate ={paginate}\r\n\r\n  /> \r\n    \r\n  </div> \r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n","\nimport './App.css';\nimport MainPage from \"./components/MainPage\"\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n    <div className=\"main-title\">\n    <h1>Barky <span className=\"purry-title\">Purry</span> </h1>\n    <img className=\"cats-dogs-img\"src=\"images/catsanddogs.svg\" alt=\"\" />\n    </div>\n   \n    <MainPage\n     \n    />\n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}